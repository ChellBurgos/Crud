@page "/genero"

@attribute [Authorize]

<div class="container">
    <div class="row mb-3">
        <div class="col">
            <div class="input-group">
                <input type="text" class="form-control" @bind="Model.Nombre_Genero" />
                <div class="input-group-append">
                    <button class="btn btn-primary" @onclick="AgregarGenero">Agregar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Genero</th>
                        <th>Articulos</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cat in ListaGeneros)
                    {
                        <tr>
                            <td>
                                <input type="text" class="form-control" @bind="cat.Nombre_Genero" />
                            </td>
                            <td>@cat.CantidadArticulos</td>
                            <td>
                                <button class="btn btn-success" @onclick="(()=>ModificarGenero(cat))">Guardar</button>
                                <button class="btn btn-danger" @onclick="(()=>EliminarGenero(cat.IdGenero))">Eliminar</button>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>
<ToastContainer />

@inject GenerosService generoService
@inject IToaster toaster
@inject SweetAlertService swal

@code {
    public GeneroModel Model { get; set; } = new GeneroModel();

    public List<GeneroModel> ListaGeneros { get; set; } = new List<GeneroModel>();

    protected override void OnInitialized()
    {
        CargarGenero();
        //otros metodos
    }

    protected void CargarGenero()
    {
        var result = generoService.ListaGeneros();
        ListaGeneros = result;
    }

    protected void AgregarGenero()
    {
        var result = generoService.Crear(Model);
        if (result.IsSuccess)
        {
            Model.IdGenero = result.Code;
            Model.CantidadArticulos = 0;



            ListaGeneros.Add(Model);

            Model = new GeneroModel();
            toaster.Success(result.Message, "OK");
        }
        else
        {
            toaster.Error(result.Message, "Error");
        }

    }

    protected void ModificarGenero(GeneroModel etapa)
    {
        var result = generoService.Modificar(etapa);
        if (result.IsSuccess)
        {
            toaster.Success(result.Message, "OK");
        }
        else
        {
            toaster.Error(result.Message, "Error");
        }

    }

    protected async Task EliminarGenero(int idetapa)
    {
        var res = await swal.FireAsync(new SweetAlertOptions
        {
            Title = "¿Confirma que desea eliminar este dato?",
            Text = "Si la elimina, no podrá recuperarlo",
            ShowConfirmButton = true,
            ConfirmButtonText = "Si, eliminar",
            ShowCancelButton = true,
            CancelButtonText = "No, no lo elimine"
        });

        if (!res.IsConfirmed)
        {
            return;
        }

        var result = generoService.Eliminar(idetapa);

        if (result.IsSuccess)
        {
            CargarGenero();
            toaster.Success(result.Message, "OK");
        }
        else
        {
            toaster.Error(result.Message, "Error");
        }


    }
}